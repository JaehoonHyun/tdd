// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: play.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace V1Advanced {

  /// <summary>Holder for reflection information generated from play.proto</summary>
  public static partial class PlayReflection {

    #region Descriptor
    /// <summary>File descriptor for play.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpwbGF5LnByb3RvEgp2MWFkdmFuY2VkGg5hZHZhbmNlZC5wcm90byJuCghC",
            "dXp6UGxheRIeCgRidXp6GAEgASgLMhAudjFhZHZhbmNlZC5CdXp6Eg0KBXdo",
            "ZXJlGAIgASgMEgsKA3dobxgDIAEoDBILCgNob3cYBCABKAwSDAoEd2hhdBgF",
            "IAEoDBILCgN3aHkYBiABKAxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::V1Advanced.AdvancedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::V1Advanced.BuzzPlay), global::V1Advanced.BuzzPlay.Parser, new[]{ "Buzz", "Where", "Who", "How", "What", "Why" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///description of 5W1H principal
  /// </summary>
  public sealed partial class BuzzPlay : pb::IMessage<BuzzPlay> {
    private static readonly pb::MessageParser<BuzzPlay> _parser = new pb::MessageParser<BuzzPlay>(() => new BuzzPlay());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuzzPlay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V1Advanced.PlayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuzzPlay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuzzPlay(BuzzPlay other) : this() {
      buzz_ = other.buzz_ != null ? other.buzz_.Clone() : null;
      where_ = other.where_;
      who_ = other.who_;
      how_ = other.how_;
      what_ = other.what_;
      why_ = other.why_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuzzPlay Clone() {
      return new BuzzPlay(this);
    }

    /// <summary>Field number for the "buzz" field.</summary>
    public const int BuzzFieldNumber = 1;
    private global::V1Advanced.Buzz buzz_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::V1Advanced.Buzz Buzz {
      get { return buzz_; }
      set {
        buzz_ = value;
      }
    }

    /// <summary>Field number for the "where" field.</summary>
    public const int WhereFieldNumber = 2;
    private pb::ByteString where_ = pb::ByteString.Empty;
    /// <summary>
    ///(12.34, 2452.2, 1235.22)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Where {
      get { return where_; }
      set {
        where_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "who" field.</summary>
    public const int WhoFieldNumber = 3;
    private pb::ByteString who_ = pb::ByteString.Empty;
    /// <summary>
    ///user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Who {
      get { return who_; }
      set {
        who_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "how" field.</summary>
    public const int HowFieldNumber = 4;
    private pb::ByteString how_ = pb::ByteString.Empty;
    /// <summary>
    ///skill, weapon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString How {
      get { return how_; }
      set {
        how_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "what" field.</summary>
    public const int WhatFieldNumber = 5;
    private pb::ByteString what_ = pb::ByteString.Empty;
    /// <summary>
    /// monster, user, none
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString What {
      get { return what_; }
      set {
        what_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "why" field.</summary>
    public const int WhyFieldNumber = 6;
    private pb::ByteString why_ = pb::ByteString.Empty;
    /// <summary>
    /// hunting, quest, none
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Why {
      get { return why_; }
      set {
        why_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuzzPlay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuzzPlay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Buzz, other.Buzz)) return false;
      if (Where != other.Where) return false;
      if (Who != other.Who) return false;
      if (How != other.How) return false;
      if (What != other.What) return false;
      if (Why != other.Why) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (buzz_ != null) hash ^= Buzz.GetHashCode();
      if (Where.Length != 0) hash ^= Where.GetHashCode();
      if (Who.Length != 0) hash ^= Who.GetHashCode();
      if (How.Length != 0) hash ^= How.GetHashCode();
      if (What.Length != 0) hash ^= What.GetHashCode();
      if (Why.Length != 0) hash ^= Why.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (buzz_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Buzz);
      }
      if (Where.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Where);
      }
      if (Who.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Who);
      }
      if (How.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(How);
      }
      if (What.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(What);
      }
      if (Why.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Why);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (buzz_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Buzz);
      }
      if (Where.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Where);
      }
      if (Who.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Who);
      }
      if (How.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(How);
      }
      if (What.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(What);
      }
      if (Why.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Why);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuzzPlay other) {
      if (other == null) {
        return;
      }
      if (other.buzz_ != null) {
        if (buzz_ == null) {
          Buzz = new global::V1Advanced.Buzz();
        }
        Buzz.MergeFrom(other.Buzz);
      }
      if (other.Where.Length != 0) {
        Where = other.Where;
      }
      if (other.Who.Length != 0) {
        Who = other.Who;
      }
      if (other.How.Length != 0) {
        How = other.How;
      }
      if (other.What.Length != 0) {
        What = other.What;
      }
      if (other.Why.Length != 0) {
        Why = other.Why;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (buzz_ == null) {
              Buzz = new global::V1Advanced.Buzz();
            }
            input.ReadMessage(Buzz);
            break;
          }
          case 18: {
            Where = input.ReadBytes();
            break;
          }
          case 26: {
            Who = input.ReadBytes();
            break;
          }
          case 34: {
            How = input.ReadBytes();
            break;
          }
          case 42: {
            What = input.ReadBytes();
            break;
          }
          
          case 50: {
            Why = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
